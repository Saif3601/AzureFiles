{
	"name": "dataflow3",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Input_for_dataflow03",
						"type": "DatasetReference"
					},
					"name": "conditionalsplit"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Output_for_dataflow03",
						"type": "DatasetReference"
					},
					"name": "usind"
				},
				{
					"dataset": {
						"referenceName": "Output_for_dataflow003",
						"type": "DatasetReference"
					},
					"name": "usauk"
				},
				{
					"dataset": {
						"referenceName": "Output_for_dataflow0003",
						"type": "DatasetReference"
					},
					"name": "usaaus"
				},
				{
					"dataset": {
						"referenceName": "Output_for_dataflow00003",
						"type": "DatasetReference"
					},
					"name": "default"
				}
			],
			"transformations": [
				{
					"name": "split1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Row as short,",
				"          Country as string,",
				"          Year as short,",
				"          Product_Type as string,",
				"          Sales as short",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> conditionalsplit",
				"conditionalsplit split(Country == 'USA' || Country == 'IND',",
				"     Country == 'USA' || Country == 'UK',",
				"     Country == 'USA' || Country == 'AUS',",
				"     disjoint: false) ~> split1@(USAIND, USAUK, USAAUS, Default)",
				"split1@USAIND sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['USA_IND'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> usind",
				"split1@USAUK sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['USA_UK'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> usauk",
				"split1@USAAUS sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['USA_AUS'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> usaaus",
				"split1@Default sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['As same as default'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> default"
			]
		}
	}
}
{
	"name": "dataflow09",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Input_for_dataflow09",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "Input_for_Second_09",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Output_for_dataflow_09",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "Output_for_dataflow009",
						"type": "DatasetReference"
					},
					"name": "sink2"
				},
				{
					"dataset": {
						"referenceName": "output_for_dataflow0009",
						"type": "DatasetReference"
					},
					"name": "sink3"
				}
			],
			"transformations": [
				{
					"name": "unionunionall"
				},
				{
					"name": "split"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Country as string,",
				"          Year as string,",
				"          Product_Type as string,",
				"          Sales as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          Country as string,",
				"          Year as string,",
				"          Product_Type as string,",
				"          Sales as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2",
				"source1, source2 union(byName: true)~> unionunionall",
				"unionunionall split(Country == 'USA',",
				"     Country == 'UK',",
				"     Country == 'IND',",
				"     disjoint: false) ~> split@(Usa, Uk, Ind, default)",
				"split@Usa sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['USA'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1",
				"split@Uk sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['UK'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink2",
				"split@Ind sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['IND'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink3"
			]
		}
	}
}